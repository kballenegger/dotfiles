#!/bin/sh
# NOTE: shebang so vim syntax highlights

# ----------------------------------------------------------------- #
#                                                                   #
#           Kenneth Ballenegger's Awesome .shellrc                  #
#                                                                   #
# ----------------------------------------------------------------- #


# -----------------------------------------------------------------
# SHELL CONFIGURATION
# -----------------------------------------------------------------

export EDITOR="vim"

export CLICOLOR="xterm-color"
export DISPLAY=:0.0
export LC_ALL="en_US.UTF-8"

# command_exists
command_exists () {
    type "$1" &> /dev/null ;
}


# -----------------------------------------------------------------
# BUILD TOOLS
# -----------------------------------------------------------------

if command_exists clang; then
    export CC="clang"
fi


# -----------------------------------------------------------------
# GIT
# -----------------------------------------------------------------

export GIT_EDITOR="~/bin/git-editor-wrapper"

# github credentials

if command_exists security; then
    export GITHUB_USER=$(security find-generic-password -D github-creds 2>/dev/null \
        | sed -n 's/^.*"acct".*"\([a-zA-Z0-9]*\)"$/\1/p')
    export GITHUB_PASSWORD=$(security find-generic-password -D github-creds -w 2>/dev/null)
fi

alias gco="git checkout"
alias gps="git push"
alias gpl="git pull"
alias gm="git merge"
alias gcm="git commit -m"
alias gc="git commit"
alias gs="git status"
alias gb="git branch"
alias gd="git diff"
alias gcp="git cherry-pick"
alias ga="git add"
alias gmv="git mv"
alias grm="git rm"

# make diff work like git-diff
alias diffg="git diff --no-index --"

# note this needs to be after rvm, otherwise wrong ruby will be used
if command_exists hub; then
    eval "$(hub alias -s)"
fi


# -----------------------------------------------------------------
# PROGRAMMING LANGUAGES
# -----------------------------------------------------------------

# rvm
if [[ -s $HOME/.rvm/scripts/rvm ]] ; then
    source $HOME/.rvm/scripts/rvm
fi

# python
alias pyi="easy_install"

# node
export NODE_PATH="/usr/local/lib/node"

# go
command_exists brew && brew ls go >/dev/null 2>&1 | grep vim >/dev/null && \
   export GOROOT=`brew ls go | grep vim | head -n 1 | ruby -ne 'Process.exit(1) unless $_ =~ /^(.+)\/misc\/vim/; puts $1'`


# -----------------------------------------------------------------
# DOCKER, VAGRANT
# -----------------------------------------------------------------

export DOCKER_TLS_VERIFY=

export VAGRANT_DEFAULT_PROVIDER="vmware_fusion"


# -----------------------------------------------------------------
# ALIASES
# -----------------------------------------------------------------

alias free='free -m'
alias flushdns='dscacheutil -flushcache'

# keep environment when doing sudo su
alias ssu='sudo su -m'

# figure out what the ips are
alias ip10="ifconfig | grep '10\\.'"

function fgr {
    fgrep -r -n $@ .
}

function pbgist {
    if [ -z $1 ]; then
        _opt=""
    else
        _opt="-t $1"
    fi
    # export GITHUB_PASSWORD=`git config --get github.password`
    _out=`pbpaste | tab2space  | gist $_opt`
    echo $_out | pbcopy
    echo $_out
}

function macc {
    if [ -z $1]; then
        open /Applications/Macchiato.app
    else
        touch $1
        open -a /Applications/Macchiato.app $1
    fi
}


# -----------------------------------------------------------------
# LS, GREP, AND DIRCOLORS
# -----------------------------------------------------------------

# we always pass these to ls(1)
LS_COMMON="-hBG"

# setup the main ls alias if we've established common args
test -n "$LS_COMMON" &&
alias ls="command ls $LS_COMMON"

# these use the ls aliases above
alias ll="ls -l"
alias l.="ls -d .*"
alias ll.="ls -dl .*"
alias lla="ls -al"

# grep colors
if echo hello|grep --color=auto l >/dev/null 2>&1; then
    export GREP_OPTIONS='--color=auto' GREP_COLOR='1;32'
fi



# -----------------------------------------------------------------
# PATH MANIPULATION FUNCTIONS
# -----------------------------------------------------------------

puniq () {
    echo "$1" |tr : '\n' |nl |sort -u -k 2,2 |sort -n |
    cut -f 2- |tr '\n' : |sed -e 's/:$//' -e 's/^://'
}


# ~/bin
export PATH="$HOME/bin:$PATH"
# brew
export PATH="/usr/local/bin:$PATH"

# condense PATH entries
PATH=$(puniq $PATH)
#MANPATH=$(puniq $MANPATH)


# -----------------------------------------------------------------
# SOURCING LOCAL .SHELLRC
# -----------------------------------------------------------------

if [ -f ~/.shellrc.local ]; then
    source ~/.shellrc.local
fi


