# vim: ft=conf

set -g prefix `
bind ` send-keys `

set-option -g default-command "bash $HOME/bin/shell-login.sh" 

# Set status bar
#set -g status-bg black
#set -g status-fg white
#set -g status-left ‘#[fg=green]#H’

# Set colors for vim to work
set -g default-terminal "screen-256color"

# Highlight active window
set-window-option -g window-status-current-bg red

unbind %
unbind -
unbind +

bind | split-window -h
bind - split-window -v
bind _ split-window -v

bind ] select-window -t +
bind [ select-window -t -

bind-key + resize-pane -D 3
bind-key / resize-pane -L 3
bind-key - resize-pane -U 3
bind-key * resize-pane -R 3

bind y copy-mode
bind -t vi-copy v begin-selection
bind -t vi-copy V rectangle-toggle
bind -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# mouse support
set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

# set mouse on with prefix m
bind m \
    set -g mode-mouse on \;\
    set -g mouse-resize-pane on \;\
    set -g mouse-select-pane on \;\
    set -g mouse-select-window on \;\
    display 'Mouse: ON'
# set mouse off with prefix M
bind M \
    set -g mode-mouse off \;\
    set -g mouse-resize-pane off \;\
    set -g mouse-select-pane off \;\
    set -g mouse-select-window off \;\
    display 'Mouse: OFF'


# zooming
bind + \
  new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \;\
  swap-pane -s tmux-zoom.0 \;\
  select-window -t tmux-zoom

bind - \
  last-window \;\
  swap-pane -s tmux-zoom.0 \;\
  kill-window -t tmux-zoom

# easy rename session
bind . command-prompt "rename-session '%%'"

# powerline
run-shell "powerline-daemon -q"
source /usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf

# set session name as title
set -g set-titles on
set -g set-titles-string "#S"


# coordinated movement bindings
# vim-way: with alt-arrow
#bind -n C-Left run "(tmux display-message -p '#{pane_current_command}' | \
#    grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
#bind -n C-Down run "(tmux display-message -p '#{pane_current_command}' | \
#    grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
#bind -n C-Up run "(tmux display-message -p '#{pane_current_command}' | \
#    grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
#bind -n C-Left run "(tmux display-message -p '#{pane_current_command}' | \
#    grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
# tmux-way: with `-arrow
bind Left run "(tmux display-message -p '#{pane_current_command}' | \
    grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys Escape ml) || tmux select-pane -L"
bind Down run "(tmux display-message -p '#{pane_current_command}' | \
    grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys Escape md) || tmux select-pane -D"
bind Up run "(tmux display-message -p '#{pane_current_command}' | \
    grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys Escape mu) || tmux select-pane -U"
bind Right run "(tmux display-message -p '#{pane_current_command}' | \
    grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys Escape mr) || tmux select-pane -R"


# List of plugins
# Supports `github_username/repo` or full git URLs
set -g @tpm_plugins "              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-sensible       \
  tmux-plugins/tmux-copycat        \
  tmux-plugins/tmux-yank           \
  tmux-plugins/tmux-pain-control   \
  tmux-plugins/tmux-resurrect      \
  tmux-plugins/tmux-sessionist     \
"


# initializes TMUX plugin manager
run-shell ~/.tmux/plugins/tpm/tpm

# Rebind y to copy-mode, because stupid tmux-yank above steals it.
bind y copy-mode

